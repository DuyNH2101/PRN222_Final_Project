// <auto-generated />
using System;
using E_Retalling_Portal.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace E_Retalling_Portal.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20250702043435_AddAdvertisementTable")]
    partial class AddAdvertisementTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("E_Retalling_Portal.Models.Account", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("externalId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("externalType")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("password")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("roleId")
                        .HasColumnType("int");

                    b.Property<int>("userId")
                        .HasColumnType("int");

                    b.Property<string>("username")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("id");

                    b.HasIndex("roleId");

                    b.HasIndex("userId");

                    b.ToTable("Accounts");

                    b.HasData(
                        new
                        {
                            id = 1,
                            password = "123",
                            roleId = 2,
                            userId = 1,
                            username = "admin"
                        },
                        new
                        {
                            id = 2,
                            password = "123",
                            roleId = 1,
                            userId = 2,
                            username = "anh"
                        },
                        new
                        {
                            id = 3,
                            password = "123",
                            roleId = 2,
                            userId = 2,
                            username = "seller"
                        },
                        new
                        {
                            id = 4,
                            password = "123",
                            roleId = 1,
                            userId = 3,
                            username = "phien47"
                        },
                        new
                        {
                            id = 5,
                            password = "123",
                            roleId = 3,
                            userId = 3,
                            username = "manager"
                        },
                        new
                        {
                            id = 6,
                            password = "123",
                            roleId = 1,
                            userId = 1,
                            username = "admin"
                        });
                });

            modelBuilder.Entity("E_Retalling_Portal.Models.Advertisement", b =>
                {
                    b.Property<int>("advertisementID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("advertisementID"));

                    b.Property<DateTime>("endDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("imageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isActive")
                        .HasColumnType("bit");

                    b.Property<string>("position")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("redirectUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("startDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("advertisementID");

                    b.ToTable("Advertisements");
                });

            modelBuilder.Entity("E_Retalling_Portal.Models.Category", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("deleteAt")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<int?>("parentCategoryId")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("parentCategoryId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            id = 1,
                            name = "Clothes"
                        },
                        new
                        {
                            id = 2,
                            name = "Watch"
                        },
                        new
                        {
                            id = 3,
                            name = "Jean",
                            parentCategoryId = 1
                        },
                        new
                        {
                            id = 4,
                            name = "Shirt",
                            parentCategoryId = 1
                        },
                        new
                        {
                            id = 5,
                            name = "Jacket",
                            parentCategoryId = 3
                        },
                        new
                        {
                            id = 6,
                            name = "abc",
                            parentCategoryId = 1
                        });
                });

            modelBuilder.Entity("E_Retalling_Portal.Models.Discount", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int?>("deleteAt")
                        .HasColumnType("int");

                    b.Property<string>("endDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("shopId")
                        .HasColumnType("int");

                    b.Property<string>("startDate")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<int>("value")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("shopId");

                    b.ToTable("Discounts");

                    b.HasData(
                        new
                        {
                            id = 1,
                            endDate = "2024-06-30",
                            name = "Summer Sale",
                            shopId = 1,
                            startDate = "2024-10-31",
                            value = 15
                        },
                        new
                        {
                            id = 2,
                            endDate = "2024-07-15",
                            name = "Birthday Discount",
                            shopId = 1,
                            startDate = "2024-07-01",
                            value = 20
                        },
                        new
                        {
                            id = 3,
                            endDate = "2024-08-31",
                            name = "Buy One Get One Free",
                            shopId = 1,
                            startDate = "2024-08-01",
                            value = 50
                        },
                        new
                        {
                            id = 4,
                            endDate = "2024-11-09",
                            name = "Holiday Discount",
                            shopId = 1,
                            startDate = "2024-10-31",
                            value = 50
                        },
                        new
                        {
                            id = 5,
                            endDate = "2024-11-09",
                            name = "End of Year Sale",
                            shopId = 1,
                            startDate = "2024-10-31",
                            value = 80
                        });
                });

            modelBuilder.Entity("E_Retalling_Portal.Models.Image", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("imageName")
                        .IsRequired()
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)");

                    b.Property<int?>("productCoveredId")
                        .HasColumnType("int");

                    b.Property<int>("productId")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("productCoveredId")
                        .IsUnique()
                        .HasFilter("[productCoveredId] IS NOT NULL");

                    b.HasIndex("productId");

                    b.ToTable("Images");

                    b.HasData(
                        new
                        {
                            id = 1,
                            imageName = "Screenshot 2024-09-13 154422.png",
                            productCoveredId = 1,
                            productId = 1
                        },
                        new
                        {
                            id = 2,
                            imageName = "Screenshot 2024-09-14 075432.png",
                            productId = 1
                        },
                        new
                        {
                            id = 3,
                            imageName = "Screenshot 2024-09-14 075432.png",
                            productId = 1
                        },
                        new
                        {
                            id = 4,
                            imageName = "Screenshot 2024-09-14 075432.png",
                            productCoveredId = 2,
                            productId = 2
                        },
                        new
                        {
                            id = 5,
                            imageName = "Screenshot 2024-09-14 080322.png",
                            productId = 2
                        },
                        new
                        {
                            id = 6,
                            imageName = "Screenshot 2024-09-14 080322.png",
                            productId = 2
                        },
                        new
                        {
                            id = 7,
                            imageName = "Screenshot 2024-09-16 214607.png",
                            productCoveredId = 3,
                            productId = 3
                        },
                        new
                        {
                            id = 8,
                            imageName = "Screenshot 2024-09-16 214607.png",
                            productId = 3
                        },
                        new
                        {
                            id = 9,
                            imageName = "Screenshot 2024-09-16 214607.png",
                            productId = 3
                        },
                        new
                        {
                            id = 10,
                            imageName = "Screenshot 2024-09-16 214607.png",
                            productCoveredId = 4,
                            productId = 4
                        });
                });

            modelBuilder.Entity("E_Retalling_Portal.Models.Order", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("address")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("createTime")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("district")
                        .HasColumnType("int");

                    b.Property<string>("endTime")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("note")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("paymentMethod")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("paymentStatus")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<int>("province")
                        .HasColumnType("int");

                    b.Property<int>("userId")
                        .HasColumnType("int");

                    b.Property<string>("ward")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("id");

                    b.HasIndex("userId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("E_Retalling_Portal.Models.OrderItem", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("comment")
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)");

                    b.Property<string>("externalOrderCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("orderId")
                        .HasColumnType("int");

                    b.Property<double>("price")
                        .HasColumnType("float");

                    b.Property<int>("productId")
                        .HasColumnType("int");

                    b.Property<int?>("productItemId")
                        .HasColumnType("int");

                    b.Property<int>("quantity")
                        .HasColumnType("int");

                    b.Property<int?>("rating")
                        .HasColumnType("int");

                    b.Property<int>("shippingFee")
                        .HasColumnType("int");

                    b.Property<string>("shippingStatus")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<double>("transactionFee")
                        .HasColumnType("float");

                    b.HasKey("id");

                    b.HasIndex("orderId");

                    b.HasIndex("productId");

                    b.HasIndex("productItemId");

                    b.ToTable("OrderItems");
                });

            modelBuilder.Entity("E_Retalling_Portal.Models.Product", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<int>("categoryId")
                        .HasColumnType("int");

                    b.Property<string>("createAt")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("deleteAt")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("desc")
                        .IsRequired()
                        .HasMaxLength(5000)
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isVariation")
                        .HasColumnType("bit");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<double>("price")
                        .HasColumnType("float");

                    b.Property<int>("quantity")
                        .HasColumnType("int");

                    b.Property<int>("shopId")
                        .HasColumnType("int");

                    b.Property<int>("status")
                        .HasColumnType("int");

                    b.Property<string>("vectorEmbaddingJson")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("weight")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("categoryId");

                    b.HasIndex("shopId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            id = 1,
                            categoryId = 3,
                            desc = "<p>this is a good product<p/>",
                            isVariation = true,
                            name = "Sport Shoe",
                            price = 11.0,
                            quantity = 0,
                            shopId = 1,
                            status = 1,
                            weight = 1000
                        },
                        new
                        {
                            id = 2,
                            categoryId = 4,
                            desc = "<p>this is a good product<p/>",
                            isVariation = false,
                            name = "T-shirt",
                            price = 12.0,
                            quantity = 5,
                            shopId = 1,
                            status = 1,
                            weight = 1000
                        },
                        new
                        {
                            id = 3,
                            categoryId = 4,
                            desc = "<p>this is a good product<p/>",
                            isVariation = true,
                            name = "Jacket",
                            price = 13.0,
                            quantity = 0,
                            shopId = 1,
                            status = 1,
                            weight = 1000
                        },
                        new
                        {
                            id = 4,
                            categoryId = 6,
                            desc = "<p>this is a good product<p/>",
                            isVariation = false,
                            name = "Jacketooo",
                            price = 14.0,
                            quantity = 6,
                            shopId = 1,
                            status = 1,
                            weight = 1000
                        });
                });

            modelBuilder.Entity("E_Retalling_Portal.Models.ProductDiscount", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("discountId")
                        .HasColumnType("int");

                    b.Property<int>("productId")
                        .HasColumnType("int");

                    b.Property<int?>("productItemId")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("discountId");

                    b.HasIndex("productId");

                    b.HasIndex("productItemId");

                    b.ToTable("ProductDiscounts");

                    b.HasData(
                        new
                        {
                            id = 1,
                            discountId = 4,
                            productId = 2
                        },
                        new
                        {
                            id = 2,
                            discountId = 4,
                            productId = 4
                        },
                        new
                        {
                            id = 5,
                            discountId = 4,
                            productId = 3,
                            productItemId = 3
                        },
                        new
                        {
                            id = 6,
                            discountId = 5,
                            productId = 3,
                            productItemId = 4
                        },
                        new
                        {
                            id = 7,
                            discountId = 4,
                            productId = 3,
                            productItemId = 5
                        },
                        new
                        {
                            id = 8,
                            discountId = 4,
                            productId = 3,
                            productItemId = 6
                        });
                });

            modelBuilder.Entity("E_Retalling_Portal.Models.ProductItem", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("attribute")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("deleteAt")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<int>("imageId")
                        .HasColumnType("int");

                    b.Property<double>("price")
                        .HasColumnType("float");

                    b.Property<int>("productId")
                        .HasColumnType("int");

                    b.Property<int>("quantity")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("imageId");

                    b.HasIndex("productId");

                    b.ToTable("ProductItems");

                    b.HasData(
                        new
                        {
                            id = 1,
                            attribute = "L",
                            imageId = 1,
                            price = 1500000.0,
                            productId = 1,
                            quantity = 5
                        },
                        new
                        {
                            id = 2,
                            attribute = "S",
                            imageId = 3,
                            price = 1003000.0,
                            productId = 1,
                            quantity = 7
                        },
                        new
                        {
                            id = 3,
                            attribute = "X",
                            imageId = 8,
                            price = 2006.0,
                            productId = 3,
                            quantity = 10
                        },
                        new
                        {
                            id = 4,
                            attribute = "X",
                            imageId = 9,
                            price = 10005.0,
                            productId = 3,
                            quantity = 10
                        },
                        new
                        {
                            id = 5,
                            attribute = "M",
                            imageId = 8,
                            price = 20000.0,
                            productId = 3,
                            quantity = 10
                        },
                        new
                        {
                            id = 6,
                            attribute = "L",
                            imageId = 9,
                            price = 1004.0,
                            productId = 3,
                            quantity = 13
                        });
                });

            modelBuilder.Entity("E_Retalling_Portal.Models.Role", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("roleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            id = 1,
                            roleName = "Customer"
                        },
                        new
                        {
                            id = 2,
                            roleName = "Shop Owner"
                        },
                        new
                        {
                            id = 3,
                            roleName = "Manager"
                        });
                });

            modelBuilder.Entity("E_Retalling_Portal.Models.Setting", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("value")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("id");

                    b.ToTable("Settings");

                    b.HasData(
                        new
                        {
                            id = 1,
                            name = "fee",
                            value = "10%"
                        });
                });

            modelBuilder.Entity("E_Retalling_Portal.Models.Shop", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("accountId")
                        .HasColumnType("int");

                    b.Property<string>("address")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("createdAt")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("district")
                        .HasColumnType("int");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("province")
                        .HasColumnType("int");

                    b.Property<string>("shopDescription")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<int>("statusId")
                        .HasColumnType("int");

                    b.Property<string>("ward")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("accountId")
                        .IsUnique();

                    b.HasIndex("statusId");

                    b.ToTable("Shops");

                    b.HasData(
                        new
                        {
                            id = 1,
                            accountId = 1,
                            address = "address",
                            createdAt = "2000-05-04",
                            district = 1644,
                            name = "shopname",
                            province = 249,
                            shopDescription = "sd",
                            statusId = 1,
                            ward = "190116"
                        },
                        new
                        {
                            id = 2,
                            accountId = 3,
                            address = "address",
                            createdAt = "2000-05-04",
                            district = 1644,
                            name = "shopname",
                            province = 249,
                            shopDescription = "sd",
                            statusId = 1,
                            ward = "190116"
                        });
                });

            modelBuilder.Entity("E_Retalling_Portal.Models.Status", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("statusName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Statuses");

                    b.HasData(
                        new
                        {
                            id = 1,
                            statusName = "active"
                        });
                });

            modelBuilder.Entity("E_Retalling_Portal.Models.User", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("address")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("birthday")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("displayName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("district")
                        .HasColumnType("int");

                    b.Property<string>("email")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("firstName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lastName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("phoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("province")
                        .HasColumnType("int");

                    b.Property<string>("ward")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            id = 1,
                            address = "",
                            birthday = "2000-05-04",
                            displayName = "kienhocgioi",
                            district = 1454,
                            email = "abc@gmail.com",
                            firstName = "first",
                            gender = "Female",
                            lastName = "last",
                            phoneNumber = "0326075641",
                            province = 202,
                            ward = "21211"
                        },
                        new
                        {
                            id = 2,
                            address = "mhjyy",
                            birthday = "2000-01-04",
                            displayName = "anh",
                            district = 1454,
                            email = "quynxhe186459@fpt.edu.vn",
                            firstName = "first",
                            gender = "Female",
                            lastName = "last",
                            phoneNumber = "0123459145",
                            province = 202,
                            ward = "21211"
                        },
                        new
                        {
                            id = 3,
                            address = "",
                            birthday = "2004-01-04",
                            displayName = "phien",
                            district = 1454,
                            email = "hoangphien46@gmail.com",
                            firstName = "duc",
                            gender = "Male",
                            lastName = "phien",
                            phoneNumber = "0968059984",
                            province = 202,
                            ward = "21211"
                        });
                });

            modelBuilder.Entity("E_Retalling_Portal.Models.Account", b =>
                {
                    b.HasOne("E_Retalling_Portal.Models.Role", "role")
                        .WithMany("accounts")
                        .HasForeignKey("roleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("E_Retalling_Portal.Models.User", "user")
                        .WithMany("accounts")
                        .HasForeignKey("userId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("role");

                    b.Navigation("user");
                });

            modelBuilder.Entity("E_Retalling_Portal.Models.Category", b =>
                {
                    b.HasOne("E_Retalling_Portal.Models.Category", "parent")
                        .WithMany("childrens")
                        .HasForeignKey("parentCategoryId");

                    b.Navigation("parent");
                });

            modelBuilder.Entity("E_Retalling_Portal.Models.Discount", b =>
                {
                    b.HasOne("E_Retalling_Portal.Models.Shop", "shop")
                        .WithMany("discounts")
                        .HasForeignKey("shopId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("shop");
                });

            modelBuilder.Entity("E_Retalling_Portal.Models.Image", b =>
                {
                    b.HasOne("E_Retalling_Portal.Models.Product", "productCovered")
                        .WithOne("coverImage")
                        .HasForeignKey("E_Retalling_Portal.Models.Image", "productCoveredId");

                    b.HasOne("E_Retalling_Portal.Models.Product", "product")
                        .WithMany("images")
                        .HasForeignKey("productId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("product");

                    b.Navigation("productCovered");
                });

            modelBuilder.Entity("E_Retalling_Portal.Models.Order", b =>
                {
                    b.HasOne("E_Retalling_Portal.Models.User", "user")
                        .WithMany("orders")
                        .HasForeignKey("userId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("user");
                });

            modelBuilder.Entity("E_Retalling_Portal.Models.OrderItem", b =>
                {
                    b.HasOne("E_Retalling_Portal.Models.Order", "order")
                        .WithMany("orderItems")
                        .HasForeignKey("orderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("E_Retalling_Portal.Models.Product", "product")
                        .WithMany("orderItems")
                        .HasForeignKey("productId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("E_Retalling_Portal.Models.ProductItem", "productItem")
                        .WithMany("orderItems")
                        .HasForeignKey("productItemId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("order");

                    b.Navigation("product");

                    b.Navigation("productItem");
                });

            modelBuilder.Entity("E_Retalling_Portal.Models.Product", b =>
                {
                    b.HasOne("E_Retalling_Portal.Models.Category", "category")
                        .WithMany("products")
                        .HasForeignKey("categoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("E_Retalling_Portal.Models.Shop", "shop")
                        .WithMany("products")
                        .HasForeignKey("shopId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("category");

                    b.Navigation("shop");
                });

            modelBuilder.Entity("E_Retalling_Portal.Models.ProductDiscount", b =>
                {
                    b.HasOne("E_Retalling_Portal.Models.Discount", "discount")
                        .WithMany("productDiscounts")
                        .HasForeignKey("discountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("E_Retalling_Portal.Models.Product", "product")
                        .WithMany("productDiscounts")
                        .HasForeignKey("productId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("E_Retalling_Portal.Models.ProductItem", "productItem")
                        .WithMany("productDiscounts")
                        .HasForeignKey("productItemId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("discount");

                    b.Navigation("product");

                    b.Navigation("productItem");
                });

            modelBuilder.Entity("E_Retalling_Portal.Models.ProductItem", b =>
                {
                    b.HasOne("E_Retalling_Portal.Models.Image", "image")
                        .WithMany("productItems")
                        .HasForeignKey("imageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("E_Retalling_Portal.Models.Product", "product")
                        .WithMany("productItems")
                        .HasForeignKey("productId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("image");

                    b.Navigation("product");
                });

            modelBuilder.Entity("E_Retalling_Portal.Models.Shop", b =>
                {
                    b.HasOne("E_Retalling_Portal.Models.Account", "account")
                        .WithOne("shop")
                        .HasForeignKey("E_Retalling_Portal.Models.Shop", "accountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("E_Retalling_Portal.Models.Status", "status")
                        .WithMany("shops")
                        .HasForeignKey("statusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("account");

                    b.Navigation("status");
                });

            modelBuilder.Entity("E_Retalling_Portal.Models.Account", b =>
                {
                    b.Navigation("shop")
                        .IsRequired();
                });

            modelBuilder.Entity("E_Retalling_Portal.Models.Category", b =>
                {
                    b.Navigation("childrens");

                    b.Navigation("products");
                });

            modelBuilder.Entity("E_Retalling_Portal.Models.Discount", b =>
                {
                    b.Navigation("productDiscounts");
                });

            modelBuilder.Entity("E_Retalling_Portal.Models.Image", b =>
                {
                    b.Navigation("productItems");
                });

            modelBuilder.Entity("E_Retalling_Portal.Models.Order", b =>
                {
                    b.Navigation("orderItems");
                });

            modelBuilder.Entity("E_Retalling_Portal.Models.Product", b =>
                {
                    b.Navigation("coverImage");

                    b.Navigation("images");

                    b.Navigation("orderItems");

                    b.Navigation("productDiscounts");

                    b.Navigation("productItems");
                });

            modelBuilder.Entity("E_Retalling_Portal.Models.ProductItem", b =>
                {
                    b.Navigation("orderItems");

                    b.Navigation("productDiscounts");
                });

            modelBuilder.Entity("E_Retalling_Portal.Models.Role", b =>
                {
                    b.Navigation("accounts");
                });

            modelBuilder.Entity("E_Retalling_Portal.Models.Shop", b =>
                {
                    b.Navigation("discounts");

                    b.Navigation("products");
                });

            modelBuilder.Entity("E_Retalling_Portal.Models.Status", b =>
                {
                    b.Navigation("shops");
                });

            modelBuilder.Entity("E_Retalling_Portal.Models.User", b =>
                {
                    b.Navigation("accounts");

                    b.Navigation("orders");
                });
#pragma warning restore 612, 618
        }
    }
}
